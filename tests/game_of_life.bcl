define main() {
    board = [[false; 10]; 10]; // create a 10x10 array of bools
    new_board = board;
    board[2][1] = true;
    board[3][1] = true;
    board[4][1] = true;
    println("Generation: 0");
    draw_board(&board);
    iters = 5;
    for i in 0..iters {
        for x in 0..10 {
            for y in 0..10 {
                neighbors = check_neighbors(&board, x, y);
                new_board[x][y] = board[x][y];
                if board[x][y] {
                    if neighbors != 2 and neighbors != 3 {
                        new_board[x][y] = false;
                    }
                } else if neighbors==3{
                    new_board[x][y] = true;
                }
            }
        }
        print("Generation: ");
        println(i+1);
        board = new_board;
        draw_board(&board);
    }

}

define check_row_neighbors(board: &bool[10], y: i32) -> i32 {
    // board = board1;
    neighbors: i32 = board[y];
    if y>0 {
        neighbors+=board[y-1];
    }
    if y<9 {
        neighbors+=board[y+1];
    }
    return neighbors;
}

define check_neighbors(board: &bool[10][10], x: i32, y:i32) -> i32 {
    // board = board1;
    neighbors = 0;
    if x>0 {
        neighbors += check_row_neighbors(&board[x-1], y);
    }
    
    // t = check_row_neighbors(board[x], y) - board[x][y];
    neighbors += check_row_neighbors(&board[x], y) - board[x][y];

    if x<9 {
        // t = check_row_neighbors(board[x+1], y);
        neighbors += check_row_neighbors(&board[x+1], y);
    }

    return neighbors;
}

define draw_row(row: &bool[10]) {
    for i in 0..10 {
        if row[i] {
            print("▓▓");
        }else {
            print("░░");
        }
    }
    println("");
}

define draw_board(board: &bool[10][10]) {
    for i in 0..10 {
        draw_row(&board[i]);
    }

    println("\n\n\n");
}