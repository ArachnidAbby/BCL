// ======================================
// created: 02/26/2023
// description:
//   A simple math library with a few basic functions
//   Binds math.h too
// ======================================

import basemath::*;

public define max(x: i32, y:i32) -> i32 {
    if x>y { return x; }
    return y;
}

public define max(x: f32, y:f32) -> f32 {
    if x>y { return x; }
    return y;
}


public define min(x: i32, y:i32) -> i32 {
    if x<y { return x; }
    return y;
}

public define min(x: f32, y:f32) -> f32 {
    if x<y { return x; }
    return y;
}


public define factorial(num: i32) -> i32{
    if num > 1 {
        return num * factorial(num-1);
    }
    return num;
}

public define abs(x : i32) -> i32 {
    if x < 0 {
        return -1 * x;
    }
    return x;
}


public define sign(x : i32) -> i32 {
    if x < 0 {
        return -1;
    }
    return 1;
}

// math.h binding
public define acos(x: f64) -> f64;
public define asin(x: f64) -> f64;
public define atan(x: f64) -> f64;
public define acos(x: f64) -> f64;
public define atan2(x: f64) -> f64;

public define cos(x: f64) -> f64;
public define cosh(x: f64) -> f64;

public define sin(x: f64) -> f64;
public define sinh(x: f64) -> f64;

public define tanh(x: f64) -> f64;


public define exp(x: f64) -> f64;
public define ldexp(x: f64, y: i32) -> f64;


public define log(x: f64) -> f64;
public define log10(x: f64) -> f64;
public define sqrt(x: f64) -> f64;
public define ceil(x: f64) -> f64;
public define fabs(x: f64) -> f64;
public define floor(x: f64) -> f64;
public define fmod(x: f64) -> f64;
